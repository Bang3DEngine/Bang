cmake_minimum_required(VERSION 3.4 FATAL_ERROR)

# -----------------------------------------------------------------------------------------------------------------------------
# FLAGS
# -----------------------------------------------------------------------------------------------------------------------------

if(APPLE)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fPIC -DPX_PHYSX_STATIC_LIB -DNDEBUG -DPX_SUPPORT_PVD=0 -pipe -mmacosx-version-min=10.7 -msse2 -ffast-math -fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden -Werror -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything  -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof -Wno-c++11-extensions -O3 -fno-strict-aliasing")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fPIC -DPX_PHYSX_STATIC_LIB -D_DEBUG -DPX_DEBUG=1 -DPX_CHECKED=1 -DPX_SUPPORT_PVD=1 -pipe -mmacosx-version-min=10.7 -msse2 -ffast-math -fno-exceptions -fvisibility=hidden -fvisibility-inlines-hidden -Werror -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything  -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof -Wno-c++11-extensions -g3 -gdwarf-2 -O0")
elseif(WIN32)
    # TODO: Set PX_PHYSX_CORE_EXPORTS flag and enable delay loads.
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /D \"DISABLE_CUDA_PHYSX\" /D \"PX_PHYSX_CORE_EXPORTS\" /D \"PX_PHYSX_DLL_NAME_POSTFIX=RELEASE\" /D \"WIN32\" /D \"WIN64\" /D \"_CRT_SECURE_NO_DEPRECATE\" /D \"_CRT_NONSTDC_NO_DEPRECATE\" /D \"_WINSOCK_DEPRECATED_NO_WARNINGS\" /D \"PX_NVTX=1\" /D \"PX_SUPPORT_PVD=1\" /D \"_WINDLL\" /GF /Zc:forScope /GR- /Gd /MT /MP /Wall /wd4514 /wd4820 /wd4127 /wd4710 /wd4711 /wd4435 /wd4577 /wd4464 /d2Zi+ /Zc:inline /fp:fast")

    # C++ Flags
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /D \"DISABLE_CUDA_PHYSX\" /GS- /W4 /Zc:wchar_t /MP /Wall /wd4514 /wd4820 /wd4127 /wd4710 /wd4711 /wd4435 /wd4577 /wd4464 /d2Zi+  /Zc:inline /fp:fast /D \"PX_PHYSX_CORE_EXPORTS\" /D \"WIN32\" /D \"WIN64\" /D \"_CRT_SECURE_NO_DEPRECATE\" /D \"_CRT_NONSTDC_NO_DEPRECATE\" /D \"_WINSOCK_DEPRECATED_NO_WARNINGS\" /D \"_DEBUG\" /D \"PX_DEBUG=1\" /D \"PX_CHECKED=1\" /D \"PX_NVTX=1\" /D \"PX_SUPPORT_PVD=1\" /D \"PX_PHYSX_DLL_NAME_POSTFIX=DEBUG\" /D \"_WINDLL\" /errorReport:prompt /GF /Zc:forScope /RTCu /GR- /Gd /MTd /Fa\"./x64/PhysX/debug\" /nologo /Fo\"./x64/PhysX/debug\" /Fp\"./x64/PhysX/debug/PhysX3DEBUG_x64.pch\" /Zi /Gm- /Od")
    # Linker Flags
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /MANIFEST /NXCOMPAT /MAP /MACHINE:x64 /DELAYLOAD:nvcuda.dll /DELAYLOAD:PxFoundation.dll /DELAYLOAD:PxPvdSDK.dll /DELAYLOAD:PhysX3Common.dll /DEBUG")
else()
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -fPIC -DNDEBUG -DPX_SUPPORT_PVD=0 -pipe -msse2 -ffast-math -fno-exceptions -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic  -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow -Wno-exit-time-destructors -Wno-global-constructors -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof -Wno-c++11-extensions -Wno-strict-aliasing -g3 -O3 -std=c++11")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fPIC -D_DEBUG -DPX_DEBUG=1 -DPX_CHECKED=1 -DPX_SUPPORT_PVD=1 -pipe -msse2 -ffast-math -fno-exceptions -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic  -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow -Wno-exit-time-destructors -Wno-global-constructors -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof -Wno-c++11-extensions -Wno-strict-aliasing -g3 -O0 -std=c++11")
endif()

# -----------------------------------------------------------------------------------------------------------------------------
# FILES
# -----------------------------------------------------------------------------------------------------------------------------

# Headers
file(GLOB_RECURSE PHYSX_HEADERS ${PHYSX_ROOT_DIR}/PhysX_3.4/Include/*.h ${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/*.h)

# Sources
file(GLOB_RECURSE PHYSX_SOURCES ${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/*.cpp
                                ${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/buffering/*.cpp
                                ${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/cloth/*.cpp
                                ${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/particles/*.cpp)

list(APPEND PHYSX_SOURCES ${PHYSX_ROOT_DIR}/PhysX_3.4/Source/ImmediateMode/src/NpImmediateMode.cpp)
list(APPEND PHYSX_SOURCES ${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysXMetaData/core/src/PxAutoGeneratedMetaDataObjects.cpp)
list(APPEND PHYSX_SOURCES ${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysXMetaData/core/src/PxMetaDataObjects.cpp)

# Remove GPU Sources
if(UNIX OR APPLE OR EMSCRIPTEN)
    # list(REMOVE_ITEM PHYSX_HEADERS "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/gpu/NpPhysicsGpu.h")
    # list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/gpu/NpPhysicsGpu.cpp")
    # list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/gpu/PxGpu.cpp")
    list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/gpu/PxParticleDeviceExclusive.cpp")
    list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/gpu/PxParticleGpu.cpp")
    # list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/gpu/PxPhysXGpuModuleLoader.cpp")
    list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/gpu/PxPhysXIndicatorDeviceExclusive.cpp")
    list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/windows/NpWindowsDelayLoadHook.cpp")
    list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/device/windows/PhysXIndicatorWindows.cpp")
    list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/device/windows/PhysXIndicatorWindows.cpp")
endif()

if(WIN32 OR APPLE)
    list(REMOVE_ITEM PHYSX_SOURCES "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/device/linux/PhysXIndicatorLinux.cpp")
endif()

# Source groups
source_group("Headers" FILES ${PHYSX_HEADERS})
source_group("Sources" FILES ${PHYSX_SOURCES})

# -----------------------------------------------------------------------------------------------------------------------------
# TARGETS
# -----------------------------------------------------------------------------------------------------------------------------

if(WIN32)
    add_library(PhysX3 SHARED ${PHYSX_HEADERS} ${PHYSX_SOURCES})
    target_link_libraries(PhysX3 PxPvdSDK)
    target_link_libraries(PhysX3 SimulationController)
    target_link_libraries(PhysX3 LowLevel)
    target_link_libraries(PhysX3 LowLevelCloth)
    target_link_libraries(PhysX3 LowLevelAABB)
    target_link_libraries(PhysX3 LowLevelDynamics)
    target_link_libraries(PhysX3 LowLevelParticles)
    target_link_libraries(PhysX3 PhysX3Common)
    target_link_libraries(PhysX3 SceneQuery)
    target_link_libraries(PhysX3 PxTask)
    target_link_libraries(PhysX3 "${PHYSX_ROOT_DIR}/src/Externals/nvToolsExt/1/lib/x64/nvToolsExt64_1.lib")
else()
    add_library(PhysX3 ${PHYSX_HEADERS} ${PHYSX_SOURCES})
endif()

set_target_properties(PhysX3 PROPERTIES FOLDER "PhysX")

target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/Common/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PxShared/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PxShared/src/foundation/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PxShared/src/fastxml/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PxShared/src/pvd/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Include/common")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Include/geometry")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Include/GeomUtils")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Include/pvd")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Include/particles")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Include/cloth")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Include/gpu")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/Common/src")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/headers")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/contact")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/common")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/convex")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/distance")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/sweep")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/gjk")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/mesh")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/hf")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/pcm")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/ccd")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/GeomUtils/src/intersection")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/LowLevel/API/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/LowLevel/software/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/LowLevel/common/include/pipeline")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/LowLevelAABB/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/LowLevelDynamics/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/LowLevelDynamics/src")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/LowLevelParticles/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/buffering")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/particles")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/cloth")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysX/src/device")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/SimulationController/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/SimulationController/src")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/SimulationController/src/particles")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysXCooking/src")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysXCooking/src/mesh")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysXCooking/src/convex")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/SceneQuery/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysXGpu/include")
target_include_directories(PhysX3 PUBLIC "${PHYSX_ROOT_DIR}/PhysX_3.4/Source/PhysXMetaData/core/include")
